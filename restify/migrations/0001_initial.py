# Generated by Django 3.2.6 on 2021-11-13 16:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ait',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ait_number', models.IntegerField(unique=True, verbose_name='Ait #')),
                ('ait_slug', models.SlugField(null=True, unique=True)),
            ],
            options={
                'verbose_name': 'AIT',
                'verbose_name_plural': 'AITs',
                'ordering': ('id', 'ait_number'),
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publisher_name', models.CharField(max_length=200, unique=True, verbose_name='Publisher Name')),
                ('publisher_slug', models.SlugField(null=True, unique=True, verbose_name='Publisher Slug')),
                ('publisher_status', models.BooleanField(default=False, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Publisher',
                'verbose_name_plural': 'Publishers',
                'ordering': ('id', 'publisher_name'),
            },
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('software_name', models.CharField(max_length=200, verbose_name='Software Name')),
                ('software_slug', models.SlugField(null=True, unique=True)),
                ('software_status', models.BooleanField(default=False, verbose_name='Active')),
                ('software_version', models.CharField(max_length=200, null=True, verbose_name='Software Version')),
                ('software_publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restify.publisher')),
            ],
            options={
                'verbose_name': 'Software',
                'verbose_name_plural': 'Software',
                'ordering': ('id', 'software_name'),
                'unique_together': {('software_name', 'software_version')},
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=200, verbose_name='Project Name')),
                ('project_slug', models.SlugField(null=True, unique=True)),
                ('project_status', models.BooleanField(default=False, verbose_name='Active')),
                ('project_ait', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='restify.ait', verbose_name='Project AIT #')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ('id', 'project_name'),
                'unique_together': {('project_name', 'project_ait')},
            },
        ),
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('environment_name', models.CharField(max_length=200, verbose_name='Environment Name')),
                ('environment_slug', models.SlugField(null=True, unique=True)),
                ('environment_status', models.BooleanField(default=False, verbose_name='Active')),
                ('environment_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restify.project', verbose_name=' environment_project - Project Environment')),
            ],
            options={
                'verbose_name': 'Environment',
                'verbose_name_plural': 'Environments',
                'ordering': ('id', 'environment_name'),
                'unique_together': {('environment_name', 'environment_project')},
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_name', models.CharField(max_length=200, unique=True, verbose_name='Device Name')),
                ('device_slug', models.SlugField(null=True, unique=True)),
                ('device_status', models.BooleanField(default=False, verbose_name='Active')),
                ('device_ait', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='restify.ait', verbose_name='Device AIT')),
                ('device_environment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='restify.environment', verbose_name='Device Environment')),
                ('device_project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='restify.project', verbose_name='Device Project')),
                ('device_software', models.ManyToManyField(blank=True, to='restify.Software', verbose_name='Device Software')),
            ],
            options={
                'verbose_name': 'Device',
                'verbose_name_plural': 'Devices',
                'ordering': ('id', 'device_name'),
            },
        ),
    ]
