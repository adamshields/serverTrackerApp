# Generated by Django 3.2.6 on 2023-04-19 19:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_record', models.IntegerField(verbose_name='Active Record')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_funkifymorphic.resource_set+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
            },
        ),
        migrations.CreateModel(
            name='GTMResource',
            fields=[
                ('resource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='funkifymorphic.resource')),
                ('load_balancing_method', models.CharField(max_length=255, verbose_name='Load Balancing Method')),
                ('dns_zone', models.CharField(max_length=255, verbose_name='DNS Zone')),
            ],
            options={
                'verbose_name': 'GTM Resource',
                'verbose_name_plural': 'GTM Resources',
            },
            bases=('funkifymorphic.resource',),
        ),
        migrations.CreateModel(
            name='LTMResource',
            fields=[
                ('resource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='funkifymorphic.resource')),
                ('virtual_servers', models.IntegerField(verbose_name='Number of Virtual Servers')),
                ('pool_size', models.IntegerField(verbose_name='Pool Size')),
            ],
            options={
                'verbose_name': 'LTM Resource',
                'verbose_name_plural': 'LTM Resources',
            },
            bases=('funkifymorphic.resource',),
        ),
        migrations.CreateModel(
            name='SANResource',
            fields=[
                ('resource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='funkifymorphic.resource')),
                ('storage_capacity', models.IntegerField(verbose_name='Storage Capacity (GB)')),
                ('redundancy_level', models.IntegerField(verbose_name='Redundancy Level')),
            ],
            options={
                'verbose_name': 'SAN Resource',
                'verbose_name_plural': 'SAN Resources',
            },
            bases=('funkifymorphic.resource',),
        ),
        migrations.CreateModel(
            name='ServerResource',
            fields=[
                ('resource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='funkifymorphic.resource')),
                ('cpu', models.IntegerField(verbose_name='CPU Cores')),
                ('memory', models.IntegerField(verbose_name='Memory (GB)')),
                ('domain', models.CharField(max_length=255, verbose_name='Domain')),
            ],
            options={
                'verbose_name': 'Server Resource',
                'verbose_name_plural': 'Server Resources',
            },
            bases=('funkifymorphic.resource',),
        ),
    ]
